{
  "contractName": "SimpleStorage",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "swapMath",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "swapMathAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "get",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"swapMath\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"swapMathAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/chris/Projects/CherrySwap/contracts/SolidityTest.sol\":\"SimpleStorage\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/chris/Projects/CherrySwap/contracts/ISwapMath.sol\":{\"keccak256\":\"0xffafe8e5a13645d5de1c9edeb78a08e21f678b26b45cd797f0feec28d8522295\",\"urls\":[\"bzzr://b0e2491f060dbd68f8845adafcb9aa30f33b9f4010ad9acbdd29e35287741609\"]},\"/Users/chris/Projects/CherrySwap/contracts/SolidityTest.sol\":{\"keccak256\":\"0xc99a9b4650098b8e62659d505906ec35ff5d4e40dfd0c06cd8a68a6f1d6badae\",\"urls\":[\"bzzr://b5044bd2a901dc4f37e74bb53180b2560415f7f1953bba1679d2997bf736ee97\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516020806101858339810180604052602081101561003057600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060f5806100906000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80636d4ce63c146037578063b2ce99b4146053575b600080fd5b603d609b565b6040518082815260200191505060405180910390f35b605960a4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600a905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea165627a7a72305820c918928e1ef4e10d79be65f90911939a352f93389e873025e44482788912f2850029",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060325760003560e01c80636d4ce63c146037578063b2ce99b4146053575b600080fd5b603d609b565b6040518082815260200191505060405180910390f35b605960a4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600a905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea165627a7a72305820c918928e1ef4e10d79be65f90911939a352f93389e873025e44482788912f2850029",
  "sourceMap": "50:235:2:-;;;106:96;8:9:-1;5:2;;;30:1;27;20:12;5:2;106:96:2;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;106:96:2;;;;;;;;;;;;;;;;179:15;158:8;;:37;;;;;;;;;;;;;;;;;;106:96;50:235;;;;;;",
  "deployedSourceMap": "50:235:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;50:235:2;;;;;;;;;;;;;;;;;;;;;;;;212:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;75:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;212:71;248:7;274:2;267:9;;212:71;:::o;75:25::-;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.5.8;\n\nimport './ISwapMath.sol';\ncontract SimpleStorage {\nISwapMath public swapMath;\n    constructor(address swapMathAddress) public{\n       swapMath = ISwapMath(swapMathAddress);\n    }\n    \n    function get() public view returns (uint256) {\n        return 10;\n    }\n}",
  "sourcePath": "/Users/chris/Projects/CherrySwap/contracts/SolidityTest.sol",
  "ast": {
    "absolutePath": "/Users/chris/Projects/CherrySwap/contracts/SolidityTest.sol",
    "exportedSymbols": {
      "SimpleStorage": [
        88
      ]
    },
    "id": 89,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 64,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:2"
      },
      {
        "absolutePath": "/Users/chris/Projects/CherrySwap/contracts/ISwapMath.sol",
        "file": "./ISwapMath.sol",
        "id": 65,
        "nodeType": "ImportDirective",
        "scope": 89,
        "sourceUnit": 6,
        "src": "24:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 88,
        "linearizedBaseContracts": [
          88
        ],
        "name": "SimpleStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 67,
            "name": "swapMath",
            "nodeType": "VariableDeclaration",
            "scope": 88,
            "src": "75:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapMath_$5",
              "typeString": "contract ISwapMath"
            },
            "typeName": {
              "contractScope": null,
              "id": 66,
              "name": "ISwapMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5,
              "src": "75:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapMath_$5",
                "typeString": "contract ISwapMath"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "149:53:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 72,
                      "name": "swapMath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "158:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapMath_$5",
                        "typeString": "contract ISwapMath"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 74,
                          "name": "swapMathAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "179:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 73,
                        "name": "ISwapMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "169:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapMath_$5_$",
                          "typeString": "type(contract ISwapMath)"
                        }
                      },
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "169:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapMath_$5",
                        "typeString": "contract ISwapMath"
                      }
                    },
                    "src": "158:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapMath_$5",
                      "typeString": "contract ISwapMath"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "158:37:2"
                }
              ]
            },
            "documentation": null,
            "id": 79,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "name": "swapMathAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "118:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "118:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "117:25:2"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "149:0:2"
            },
            "scope": 88,
            "src": "106:96:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "257:26:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "3130",
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "274:2:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "functionReturnParameters": 83,
                  "id": 85,
                  "nodeType": "Return",
                  "src": "267:9:2"
                }
              ]
            },
            "documentation": null,
            "id": 87,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "224:2:2"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "248:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "248:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "247:9:2"
            },
            "scope": 88,
            "src": "212:71:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 89,
        "src": "50:235:2"
      }
    ],
    "src": "0:285:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/chris/Projects/CherrySwap/contracts/SolidityTest.sol",
    "exportedSymbols": {
      "SimpleStorage": [
        88
      ]
    },
    "id": 89,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 64,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:2"
      },
      {
        "absolutePath": "/Users/chris/Projects/CherrySwap/contracts/ISwapMath.sol",
        "file": "./ISwapMath.sol",
        "id": 65,
        "nodeType": "ImportDirective",
        "scope": 89,
        "sourceUnit": 6,
        "src": "24:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 88,
        "linearizedBaseContracts": [
          88
        ],
        "name": "SimpleStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 67,
            "name": "swapMath",
            "nodeType": "VariableDeclaration",
            "scope": 88,
            "src": "75:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapMath_$5",
              "typeString": "contract ISwapMath"
            },
            "typeName": {
              "contractScope": null,
              "id": 66,
              "name": "ISwapMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5,
              "src": "75:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapMath_$5",
                "typeString": "contract ISwapMath"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "149:53:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 72,
                      "name": "swapMath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "158:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapMath_$5",
                        "typeString": "contract ISwapMath"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 74,
                          "name": "swapMathAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "179:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 73,
                        "name": "ISwapMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "169:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapMath_$5_$",
                          "typeString": "type(contract ISwapMath)"
                        }
                      },
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "169:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapMath_$5",
                        "typeString": "contract ISwapMath"
                      }
                    },
                    "src": "158:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapMath_$5",
                      "typeString": "contract ISwapMath"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "158:37:2"
                }
              ]
            },
            "documentation": null,
            "id": 79,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "name": "swapMathAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "118:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "118:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "117:25:2"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "149:0:2"
            },
            "scope": 88,
            "src": "106:96:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "257:26:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "3130",
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "274:2:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "functionReturnParameters": 83,
                  "id": 85,
                  "nodeType": "Return",
                  "src": "267:9:2"
                }
              ]
            },
            "documentation": null,
            "id": 87,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "224:2:2"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "248:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "248:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "247:9:2"
            },
            "scope": 88,
            "src": "212:71:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 89,
        "src": "50:235:2"
      }
    ],
    "src": "0:285:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-23T21:51:46.252Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}