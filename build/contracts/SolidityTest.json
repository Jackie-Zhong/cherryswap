{
  "contractName": "SolidityTest",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "swapMath",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "swapMathAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "get",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getVyper",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"getVyper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"swapMath\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"swapMathAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/chris/Projects/CherrySwap/contracts/SolidityTest.sol\":\"SolidityTest\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/chris/Projects/CherrySwap/contracts/ISwapMath.sol\":{\"keccak256\":\"0x9bb4380872ec67de9bf3bb231601a0d22ea697264f1833c5386fc074ee58397e\",\"urls\":[\"bzzr://7e7ef38644ee29ea7a8d1fd83807794c60aae0f8e221ae7528ec01293cff17f3\"]},\"/Users/chris/Projects/CherrySwap/contracts/SolidityTest.sol\":{\"keccak256\":\"0xe0db952a34113d85e671b9318ee12e42a69182d4345c20914161a51a8b4a8623\",\"urls\":[\"bzzr://12d60e2327805c6c74414d76d0de4980fbd0b61d27804eb66ae101fded0ebf67\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516020806102628339810180604052602081101561003057600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101d1806100916000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630663773d146100465780636d4ce63c14610064578063b2ce99b414610082575b600080fd5b61004e6100cc565b6040518082815260200191505060405180910390f35b61006c610177565b6040518082815260200191505060405180910390f35b61008a610180565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637d3688736040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561013757600080fd5b505af115801561014b573d6000803e3d6000fd5b505050506040513d602081101561016157600080fd5b8101908080519060200190929190505050905090565b6000600b905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea165627a7a723058209d2761799cc06b0a64be8f6d625593a896e3916f4ea2e21478edf674fd6d09570029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80630663773d146100465780636d4ce63c14610064578063b2ce99b414610082575b600080fd5b61004e6100cc565b6040518082815260200191505060405180910390f35b61006c610177565b6040518082815260200191505060405180910390f35b61008a610180565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637d3688736040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561013757600080fd5b505af115801561014b573d6000803e3d6000fd5b505050506040513d602081101561016157600080fd5b8101908080519060200190929190505050905090565b6000600b905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea165627a7a723058209d2761799cc06b0a64be8f6d625593a896e3916f4ea2e21478edf674fd6d09570029",
  "sourceMap": "50:326:2:-;;;105:96;8:9:-1;5:2;;;30:1;27;20:12;5:2;105:96:2;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;105:96:2;;;;;;;;;;;;;;;;178:15;157:8;;:37;;;;;;;;;;;;;;;;;;105:96;50:326;;;;;;",
  "deployedSourceMap": "50:326:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;50:326:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;288:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;211:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;74:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;288:86;324:7;350:8;;;;;;;;;;;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;350:17:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;350:17:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;350:17:2;;;;;;;;;;;;;;;;343:24;;288:86;:::o;211:71::-;247:7;273:2;266:9;;211:71;:::o;74:25::-;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.5.8;\n\nimport './ISwapMath.sol';\ncontract SolidityTest {\nISwapMath public swapMath;\n    constructor(address swapMathAddress) public{\n       swapMath = ISwapMath(swapMathAddress);\n    }\n    \n    function get() public view returns (uint256) {\n        return 11;\n    }\n\n    function getVyper() public returns (uint256) {\n        return swapMath.getnum();\n    }\n}",
  "sourcePath": "/Users/chris/Projects/CherrySwap/contracts/SolidityTest.sol",
  "ast": {
    "absolutePath": "/Users/chris/Projects/CherrySwap/contracts/SolidityTest.sol",
    "exportedSymbols": {
      "SolidityTest": [
        100
      ]
    },
    "id": 101,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 66,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:2"
      },
      {
        "absolutePath": "/Users/chris/Projects/CherrySwap/contracts/ISwapMath.sol",
        "file": "./ISwapMath.sol",
        "id": 67,
        "nodeType": "ImportDirective",
        "scope": 101,
        "sourceUnit": 8,
        "src": "24:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 100,
        "linearizedBaseContracts": [
          100
        ],
        "name": "SolidityTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 69,
            "name": "swapMath",
            "nodeType": "VariableDeclaration",
            "scope": 100,
            "src": "74:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapMath_$7",
              "typeString": "contract ISwapMath"
            },
            "typeName": {
              "contractScope": null,
              "id": 68,
              "name": "ISwapMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7,
              "src": "74:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapMath_$7",
                "typeString": "contract ISwapMath"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "148:53:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 74,
                      "name": "swapMath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "157:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapMath_$7",
                        "typeString": "contract ISwapMath"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 76,
                          "name": "swapMathAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "178:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 75,
                        "name": "ISwapMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "168:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapMath_$7_$",
                          "typeString": "type(contract ISwapMath)"
                        }
                      },
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "168:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapMath_$7",
                        "typeString": "contract ISwapMath"
                      }
                    },
                    "src": "157:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapMath_$7",
                      "typeString": "contract ISwapMath"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "157:37:2"
                }
              ]
            },
            "documentation": null,
            "id": 81,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "name": "swapMathAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "117:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "117:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "116:25:2"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "148:0:2"
            },
            "scope": 100,
            "src": "105:96:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "256:26:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "3131",
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "273:2:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_11_by_1",
                      "typeString": "int_const 11"
                    },
                    "value": "11"
                  },
                  "functionReturnParameters": 85,
                  "id": 87,
                  "nodeType": "Return",
                  "src": "266:9:2"
                }
              ]
            },
            "documentation": null,
            "id": 89,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "223:2:2"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "247:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "247:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "246:9:2"
            },
            "scope": 100,
            "src": "211:71:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "333:41:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 94,
                        "name": "swapMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "350:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapMath_$7",
                          "typeString": "contract ISwapMath"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getnum",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "350:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "350:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 93,
                  "id": 97,
                  "nodeType": "Return",
                  "src": "343:24:2"
                }
              ]
            },
            "documentation": null,
            "id": 99,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVyper",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "305:2:2"
            },
            "returnParameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "324:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "323:9:2"
            },
            "scope": 100,
            "src": "288:86:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 101,
        "src": "50:326:2"
      }
    ],
    "src": "0:376:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/chris/Projects/CherrySwap/contracts/SolidityTest.sol",
    "exportedSymbols": {
      "SolidityTest": [
        100
      ]
    },
    "id": 101,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 66,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:2"
      },
      {
        "absolutePath": "/Users/chris/Projects/CherrySwap/contracts/ISwapMath.sol",
        "file": "./ISwapMath.sol",
        "id": 67,
        "nodeType": "ImportDirective",
        "scope": 101,
        "sourceUnit": 8,
        "src": "24:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 100,
        "linearizedBaseContracts": [
          100
        ],
        "name": "SolidityTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 69,
            "name": "swapMath",
            "nodeType": "VariableDeclaration",
            "scope": 100,
            "src": "74:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapMath_$7",
              "typeString": "contract ISwapMath"
            },
            "typeName": {
              "contractScope": null,
              "id": 68,
              "name": "ISwapMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7,
              "src": "74:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapMath_$7",
                "typeString": "contract ISwapMath"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "148:53:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 74,
                      "name": "swapMath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "157:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapMath_$7",
                        "typeString": "contract ISwapMath"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 76,
                          "name": "swapMathAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "178:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 75,
                        "name": "ISwapMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "168:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapMath_$7_$",
                          "typeString": "type(contract ISwapMath)"
                        }
                      },
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "168:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapMath_$7",
                        "typeString": "contract ISwapMath"
                      }
                    },
                    "src": "157:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapMath_$7",
                      "typeString": "contract ISwapMath"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "157:37:2"
                }
              ]
            },
            "documentation": null,
            "id": 81,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "name": "swapMathAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "117:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "117:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "116:25:2"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "148:0:2"
            },
            "scope": 100,
            "src": "105:96:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "256:26:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "3131",
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "273:2:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_11_by_1",
                      "typeString": "int_const 11"
                    },
                    "value": "11"
                  },
                  "functionReturnParameters": 85,
                  "id": 87,
                  "nodeType": "Return",
                  "src": "266:9:2"
                }
              ]
            },
            "documentation": null,
            "id": 89,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "223:2:2"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "247:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "247:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "246:9:2"
            },
            "scope": 100,
            "src": "211:71:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "333:41:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 94,
                        "name": "swapMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "350:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapMath_$7",
                          "typeString": "contract ISwapMath"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getnum",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "350:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "350:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 93,
                  "id": 97,
                  "nodeType": "Return",
                  "src": "343:24:2"
                }
              ]
            },
            "documentation": null,
            "id": 99,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVyper",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "305:2:2"
            },
            "returnParameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "324:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "323:9:2"
            },
            "scope": 100,
            "src": "288:86:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 101,
        "src": "50:326:2"
      }
    ],
    "src": "0:376:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-23T22:09:29.103Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}